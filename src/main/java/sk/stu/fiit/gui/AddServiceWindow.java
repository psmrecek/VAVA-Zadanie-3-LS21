/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import sk.stu.fiit.inputs.InputProcessor;
import sk.stu.fiit.logic.Accommodation;
import sk.stu.fiit.logic.Hotel;
import sk.stu.fiit.logic.Service;

/**
 *
 * @author PeterSmrecek
 */
public class AddServiceWindow extends javax.swing.JFrame {

    /**
     * Creates new form Buttons
     */
    
    private static final Logger logger = Logger.getLogger(AddServiceWindow.class.getName());
    
    private Accommodation accommodation;
    private SimpleDateFormat sdfRoom = new SimpleDateFormat("dd.MM.yyyy HH:mm");
    private double total = 0;
    private ArrayList<String> listServicesNames;
    private ArrayList<Service> listServices;
    
    public AddServiceWindow(Accommodation accommodation, Hotel hotel) {
        initComponents();
        this.accommodation = accommodation;
        this.listServices = hotel.getListServices();
        
        updateAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        controlsPnl = new javax.swing.JPanel();
        customerNameLbl = new javax.swing.JLabel();
        roomIdLbl = new javax.swing.JLabel();
        startDateLbl = new javax.swing.JLabel();
        endDateLbl = new javax.swing.JLabel();
        priceOriginalLbl = new javax.swing.JLabel();
        priceServicesLbl = new javax.swing.JLabel();
        sumLbl = new javax.swing.JLabel();
        priceDiscountedLbl = new javax.swing.JLabel();
        discountLbl = new javax.swing.JLabel();
        customerNameTf = new javax.swing.JTextField();
        roomIdTf = new javax.swing.JTextField();
        startDateTf = new javax.swing.JTextField();
        endDateTf = new javax.swing.JTextField();
        priceOriginalTf = new javax.swing.JTextField();
        priceServicesTf = new javax.swing.JTextField();
        sumTf = new javax.swing.JTextField();
        priceDiscountedTf = new javax.swing.JTextField();
        discountTf = new javax.swing.JTextField();
        titleLbl = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addServiceBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        servicesScroll = new javax.swing.JScrollPane();
        servicesTbl = new javax.swing.JTable();
        priceNightLbl = new javax.swing.JLabel();
        numberNightsLbl = new javax.swing.JLabel();
        priceNightTf = new javax.swing.JTextField();
        numberNightsTf = new javax.swing.JTextField();
        serviceAddLbl = new javax.swing.JLabel();
        serviceCb = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pridávanie služieb");

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        controlsPnl.setLayout(jPanel1Layout);

        customerNameLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        customerNameLbl.setText("Zákazník");
        customerNameLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        customerNameLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        controlsPnl.add(customerNameLbl, gridBagConstraints);

        roomIdLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomIdLbl.setText("Izba");
        roomIdLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        roomIdLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        controlsPnl.add(roomIdLbl, gridBagConstraints);

        startDateLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startDateLbl.setText("Dátum začiatku ubytovania");
        startDateLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        startDateLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        controlsPnl.add(startDateLbl, gridBagConstraints);

        endDateLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        endDateLbl.setText("Dátum konca ubytovania");
        endDateLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        endDateLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        controlsPnl.add(endDateLbl, gridBagConstraints);

        priceOriginalLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceOriginalLbl.setText("Cena za izbu bez zľavy");
        priceOriginalLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        priceOriginalLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        controlsPnl.add(priceOriginalLbl, gridBagConstraints);

        priceServicesLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceServicesLbl.setText("Cena za služby");
        priceServicesLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        priceServicesLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 22;
        controlsPnl.add(priceServicesLbl, gridBagConstraints);

        sumLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sumLbl.setText("Spolu");
        sumLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        sumLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 24;
        controlsPnl.add(sumLbl, gridBagConstraints);

        priceDiscountedLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceDiscountedLbl.setText("Cena za izbu so zľavou");
        priceDiscountedLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        priceDiscountedLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        controlsPnl.add(priceDiscountedLbl, gridBagConstraints);

        discountLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        discountLbl.setText("Zľava");
        discountLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        discountLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        controlsPnl.add(discountLbl, gridBagConstraints);

        customerNameTf.setEditable(false);
        customerNameTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        customerNameTf.setMinimumSize(new java.awt.Dimension(200, 26));
        customerNameTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(customerNameTf, gridBagConstraints);

        roomIdTf.setEditable(false);
        roomIdTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomIdTf.setMinimumSize(new java.awt.Dimension(200, 26));
        roomIdTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(roomIdTf, gridBagConstraints);

        startDateTf.setEditable(false);
        startDateTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        startDateTf.setMinimumSize(new java.awt.Dimension(200, 26));
        startDateTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(startDateTf, gridBagConstraints);

        endDateTf.setEditable(false);
        endDateTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        endDateTf.setMinimumSize(new java.awt.Dimension(200, 26));
        endDateTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(endDateTf, gridBagConstraints);

        priceOriginalTf.setEditable(false);
        priceOriginalTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceOriginalTf.setMinimumSize(new java.awt.Dimension(200, 26));
        priceOriginalTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(priceOriginalTf, gridBagConstraints);

        priceServicesTf.setEditable(false);
        priceServicesTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceServicesTf.setMinimumSize(new java.awt.Dimension(200, 26));
        priceServicesTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(priceServicesTf, gridBagConstraints);

        sumTf.setEditable(false);
        sumTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        sumTf.setMinimumSize(new java.awt.Dimension(200, 26));
        sumTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(sumTf, gridBagConstraints);

        priceDiscountedTf.setEditable(false);
        priceDiscountedTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceDiscountedTf.setMinimumSize(new java.awt.Dimension(200, 26));
        priceDiscountedTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(priceDiscountedTf, gridBagConstraints);

        discountTf.setEditable(false);
        discountTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        discountTf.setMinimumSize(new java.awt.Dimension(200, 26));
        discountTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(discountTf, gridBagConstraints);

        titleLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("Služby");
        titleLbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLbl.setPreferredSize(new java.awt.Dimension(450, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        controlsPnl.add(titleLbl, gridBagConstraints);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        addServiceBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addServiceBtn.setText("Pridať zvolenú službu");
        addServiceBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addServiceBtnMouseReleased(evt);
            }
        });
        jPanel2.add(addServiceBtn);

        cancelBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cancelBtn.setText("Zrušiť");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelBtnMouseReleased(evt);
            }
        });
        jPanel2.add(cancelBtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.gridwidth = 5;
        controlsPnl.add(jPanel2, gridBagConstraints);

        servicesScroll.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabuľka služieb", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        servicesScroll.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        servicesScroll.setMinimumSize(new java.awt.Dimension(375, 260));
        servicesScroll.setPreferredSize(new java.awt.Dimension(12, 500));

        servicesTbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        servicesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Služba", "Cena"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        servicesTbl.setMinimumSize(new java.awt.Dimension(375, 260));
        servicesTbl.getTableHeader().setReorderingAllowed(false);
        servicesScroll.setViewportView(servicesTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 23;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        controlsPnl.add(servicesScroll, gridBagConstraints);

        priceNightLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceNightLbl.setText("Cena za noc");
        priceNightLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        priceNightLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        controlsPnl.add(priceNightLbl, gridBagConstraints);

        numberNightsLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numberNightsLbl.setText("Počet nocí");
        numberNightsLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        numberNightsLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        controlsPnl.add(numberNightsLbl, gridBagConstraints);

        priceNightTf.setEditable(false);
        priceNightTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceNightTf.setMinimumSize(new java.awt.Dimension(200, 26));
        priceNightTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(priceNightTf, gridBagConstraints);

        numberNightsTf.setEditable(false);
        numberNightsTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numberNightsTf.setMinimumSize(new java.awt.Dimension(200, 26));
        numberNightsTf.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(numberNightsTf, gridBagConstraints);

        serviceAddLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        serviceAddLbl.setText("Služba na pridanie");
        serviceAddLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        serviceAddLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 26;
        controlsPnl.add(serviceAddLbl, gridBagConstraints);

        serviceCb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        serviceCb.setToolTipText("");
        serviceCb.setMinimumSize(new java.awt.Dimension(200, 26));
        serviceCb.setPreferredSize(new java.awt.Dimension(200, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 26;
        gridBagConstraints.gridwidth = 3;
        controlsPnl.add(serviceCb, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(controlsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(controlsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseReleased
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBtnMouseReleased

    private void addServiceBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addServiceBtnMouseReleased
        // TODO add your handling code here:
        String atribute = "";

        if (serviceCb.getSelectedItem() != null) {
            atribute = String.valueOf(serviceCb.getSelectedItem());
        }

        if (InputProcessor.emptyString(atribute)) {
            JOptionPane.showMessageDialog(rootPane,
                    "Výber služby nemôže byť prázdny!",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int index = listServicesNames.indexOf(atribute);

        if (!InputProcessor.isPositiveInt(index)) {
            JOptionPane.showMessageDialog(rootPane,
                    "Zlý výber služby!",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Service service = listServices.get(index);
        
        accommodation.addService(service);
        logger.info("Added service to accommodation");
        updateAll();
    }//GEN-LAST:event_addServiceBtnMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addServiceBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPanel controlsPnl;
    private javax.swing.JLabel customerNameLbl;
    private javax.swing.JTextField customerNameTf;
    private javax.swing.JLabel discountLbl;
    private javax.swing.JTextField discountTf;
    private javax.swing.JLabel endDateLbl;
    private javax.swing.JTextField endDateTf;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel numberNightsLbl;
    private javax.swing.JTextField numberNightsTf;
    private javax.swing.JLabel priceDiscountedLbl;
    private javax.swing.JTextField priceDiscountedTf;
    private javax.swing.JLabel priceNightLbl;
    private javax.swing.JTextField priceNightTf;
    private javax.swing.JLabel priceOriginalLbl;
    private javax.swing.JTextField priceOriginalTf;
    private javax.swing.JLabel priceServicesLbl;
    private javax.swing.JTextField priceServicesTf;
    private javax.swing.JLabel roomIdLbl;
    private javax.swing.JTextField roomIdTf;
    private javax.swing.JLabel serviceAddLbl;
    private javax.swing.JComboBox<String> serviceCb;
    private javax.swing.JScrollPane servicesScroll;
    private javax.swing.JTable servicesTbl;
    private javax.swing.JLabel startDateLbl;
    private javax.swing.JTextField startDateTf;
    private javax.swing.JLabel sumLbl;
    private javax.swing.JTextField sumTf;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables

    private void deleteRows(DefaultTableModel model) {
        if (model.getRowCount() > 0) {
            for (int i = model.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
    }

    private double populateServicesTbl() {
        DefaultTableModel model = (DefaultTableModel) servicesTbl.getModel();
        deleteRows(model);

        int numberOfColumns = servicesTbl.getColumnCount();
        Object[] rowData = new Object[numberOfColumns];
        ArrayList<Service> list = accommodation.getListServices();
        
        Double priceServices = 0d;
        
        for (int i = 0; i < list.size(); i++) {
            rowData[0] = list.get(i).getName();
            
            Double price = list.get(i).getPrice();
            priceServices += price;
            rowData[1] = String.valueOf(price);
            
            model.addRow(rowData);
        }
        
        return priceServices;
    }
       
    private void updateAll() {
        Date start = accommodation.getStartDate();
        Date end = accommodation.getEndDate();
        
        Date startWithoutTime = null;
        Date endWithoutTime = null;
        try {
            startWithoutTime = InputProcessor.dateWithoutTime(start);
            endWithoutTime = InputProcessor.dateWithoutTime(end);

        } catch (ParseException ex) {
            logger.error("Unable to count number of nights");
        }
        
        long diffInMillies = Math.abs(end.getTime() - start.getTime());
        int diffInDays = (int) TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);
        double nightPrice = accommodation.getRoom().getCategory().getPrice();
        double originalPrice = nightPrice * diffInDays;
        int discount = diffInDays > 7 ? 10 : 0;
        double discountedPrice = originalPrice * (100 - discount) / 100;

        double priceServices = populateServicesTbl();
        double priceSum = discountedPrice + priceServices;
        total = priceSum;

        customerNameTf.setText(accommodation.getCustomer().getName());
        roomIdTf.setText(accommodation.getRoom().getName());
        startDateTf.setText(sdfRoom.format(start));
        endDateTf.setText(sdfRoom.format(end));
        priceNightTf.setText(String.valueOf(nightPrice));
        numberNightsTf.setText(String.valueOf(diffInDays));
        priceOriginalTf.setText(String.valueOf(originalPrice));
        priceDiscountedTf.setText(String.valueOf(discountedPrice));
        discountTf.setText(discount > 0 ? String.valueOf(discount) : "Bez zľavy");
        priceServicesTf.setText(String.valueOf(priceServices));
        sumTf.setText(String.valueOf(priceSum));
        
        listServicesNames = InputProcessor.getListOfNames(listServices);
        serviceCb.setModel(new DefaultComboBoxModel<String>(listServicesNames.toArray(new String[0])));
    }


}
