/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.stu.fiit.gui;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sk.stu.fiit.inputs.InputProcessor;
import sk.stu.fiit.logic.Accommodation;
import sk.stu.fiit.logic.Category;
import sk.stu.fiit.logic.Customer;
import sk.stu.fiit.logic.Hotel;
import sk.stu.fiit.logic.IName;
import sk.stu.fiit.logic.Room;

/**
 *
 * @author PeterSmrecek
 */
public class HotelManagementWindow extends javax.swing.JFrame {

    /**
     * Creates new form CustomerHistoriWindow
     */
    
    private Hotel hotel;
    private SimpleDateFormat sdfRoom = new SimpleDateFormat("dd.MM.yyyy HH:mm");
    private ArrayList<String> listCategoriesNames;
    private ArrayList<Category> listCategories;
    
    private ArrayList<String> listRoomNames;
    private ArrayList<Room> listRooms;
    
    private ArrayList<ImageIcon> listImages = new ArrayList<>();
    private int currentImageId = -1;
    
    public HotelManagementWindow(Hotel hotel) {
        initComponents();
        this.hotel = hotel;
        
        refreshCategories();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        accommScroll = new javax.swing.JScrollPane();
        accommTbl = new javax.swing.JTable();
        categoryLbl = new javax.swing.JLabel();
        roomLbl = new javax.swing.JLabel();
        titleLbl = new javax.swing.JLabel();
        buttonsPnl = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        categoryCb = new javax.swing.JComboBox<>();
        roomCb = new javax.swing.JComboBox<>();
        showBtn = new javax.swing.JButton();
        nextBtn = new javax.swing.JButton();
        previousBtn = new javax.swing.JButton();
        numberLbl = new javax.swing.JLabel();
        pictureLbl = new javax.swing.JLabel();
        roomCatLbl = new javax.swing.JLabel();
        ifnoCatLbl = new javax.swing.JLabel();
        priceCatLbl = new javax.swing.JLabel();
        roomCatTf = new javax.swing.JTextField();
        infoCatTf = new javax.swing.JTextField();
        priceCatTf = new javax.swing.JTextField();
        roomIdLbl = new javax.swing.JLabel();
        roomIdTf = new javax.swing.JTextField();
        roomNoteLbl = new javax.swing.JLabel();
        roomNoteTf = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Zobrazovač izieb");

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanel1.setLayout(jPanel1Layout);

        accommScroll.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabuľka ubytovaní", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        accommScroll.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        accommScroll.setMinimumSize(new java.awt.Dimension(375, 260));
        accommScroll.setPreferredSize(new java.awt.Dimension(12, 500));

        accommTbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        accommTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Zákazník", "Od", "Do", "Služby", "Suma"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        accommTbl.setMinimumSize(new java.awt.Dimension(375, 260));
        accommTbl.getTableHeader().setReorderingAllowed(false);
        accommScroll.setViewportView(accommTbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(accommScroll, gridBagConstraints);

        categoryLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categoryLbl.setText("Kategória");
        categoryLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        categoryLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel1.add(categoryLbl, gridBagConstraints);

        roomLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomLbl.setText("Izba");
        roomLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        roomLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel1.add(roomLbl, gridBagConstraints);

        titleLbl.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setText("Zobrazovač izieb");
        titleLbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleLbl.setPreferredSize(new java.awt.Dimension(450, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 11;
        jPanel1.add(titleLbl, gridBagConstraints);

        buttonsPnl.setLayout(new javax.swing.BoxLayout(buttonsPnl, javax.swing.BoxLayout.LINE_AXIS));

        okBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        okBtn.setText("OK");
        okBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                okBtnMouseReleased(evt);
            }
        });
        buttonsPnl.add(okBtn);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 7;
        jPanel1.add(buttonsPnl, gridBagConstraints);

        categoryCb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        categoryCb.setToolTipText("");
        categoryCb.setMinimumSize(new java.awt.Dimension(300, 26));
        categoryCb.setPreferredSize(new java.awt.Dimension(300, 26));
        categoryCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryCbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel1.add(categoryCb, gridBagConstraints);

        roomCb.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomCb.setToolTipText("");
        roomCb.setMinimumSize(new java.awt.Dimension(300, 26));
        roomCb.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel1.add(roomCb, gridBagConstraints);

        showBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        showBtn.setText("Zobraziť");
        showBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                showBtnMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        jPanel1.add(showBtn, gridBagConstraints);

        nextBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nextBtn.setText("-->");
        nextBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                nextBtnMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 16;
        jPanel1.add(nextBtn, gridBagConstraints);

        previousBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        previousBtn.setText("<--");
        previousBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                previousBtnMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        jPanel1.add(previousBtn, gridBagConstraints);

        numberLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        numberLbl.setText("No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(numberLbl, gridBagConstraints);

        pictureLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pictureLbl.setMinimumSize(new java.awt.Dimension(200, 200));
        pictureLbl.setPreferredSize(new java.awt.Dimension(200, 200));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 13;
        jPanel1.add(pictureLbl, gridBagConstraints);

        roomCatLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomCatLbl.setText("Kategória zvolenej izby");
        roomCatLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        roomCatLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        jPanel1.add(roomCatLbl, gridBagConstraints);

        ifnoCatLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ifnoCatLbl.setText("Popis kategórie");
        ifnoCatLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        ifnoCatLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        jPanel1.add(ifnoCatLbl, gridBagConstraints);

        priceCatLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceCatLbl.setText("Cena ketegórie");
        priceCatLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        priceCatLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        jPanel1.add(priceCatLbl, gridBagConstraints);

        roomCatTf.setEditable(false);
        roomCatTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomCatTf.setMinimumSize(new java.awt.Dimension(300, 26));
        roomCatTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        jPanel1.add(roomCatTf, gridBagConstraints);

        infoCatTf.setEditable(false);
        infoCatTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        infoCatTf.setMinimumSize(new java.awt.Dimension(300, 26));
        infoCatTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        jPanel1.add(infoCatTf, gridBagConstraints);

        priceCatTf.setEditable(false);
        priceCatTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        priceCatTf.setMinimumSize(new java.awt.Dimension(300, 26));
        priceCatTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        jPanel1.add(priceCatTf, gridBagConstraints);

        roomIdLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomIdLbl.setText("Číslo izby");
        roomIdLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        roomIdLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        jPanel1.add(roomIdLbl, gridBagConstraints);

        roomIdTf.setEditable(false);
        roomIdTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomIdTf.setMinimumSize(new java.awt.Dimension(300, 26));
        roomIdTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        jPanel1.add(roomIdTf, gridBagConstraints);

        roomNoteLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomNoteLbl.setText("Poznámka k izbe");
        roomNoteLbl.setMinimumSize(new java.awt.Dimension(200, 20));
        roomNoteLbl.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        jPanel1.add(roomNoteLbl, gridBagConstraints);

        roomNoteTf.setEditable(false);
        roomNoteTf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        roomNoteTf.setMinimumSize(new java.awt.Dimension(300, 26));
        roomNoteTf.setPreferredSize(new java.awt.Dimension(300, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        jPanel1.add(roomNoteTf, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1083, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okBtnMouseReleased
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_okBtnMouseReleased

    private void categoryCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryCbActionPerformed
        // TODO add your handling code here:
        refrehRooms();
    }//GEN-LAST:event_categoryCbActionPerformed

    private void showBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showBtnMouseReleased
        // TODO add your handling code here:
        showAction();
    }//GEN-LAST:event_showBtnMouseReleased

    private void previousBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousBtnMouseReleased
        // TODO add your handling code here:
        int newId = currentImageId - 1;
        if (InputProcessor.isPositiveInt(newId)) {
            setImage(newId);
        }
    }//GEN-LAST:event_previousBtnMouseReleased

    private void nextBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextBtnMouseReleased
        // TODO add your handling code here:
        int newId = currentImageId + 1;
        if (newId < listImages.size()) {
            setImage(newId);
        }
    }//GEN-LAST:event_nextBtnMouseReleased

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CustomerHistoriWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CustomerHistoriWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CustomerHistoriWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CustomerHistoriWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CustomerHistoriWindow().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane accommScroll;
    private javax.swing.JTable accommTbl;
    private javax.swing.JPanel buttonsPnl;
    private javax.swing.JComboBox<String> categoryCb;
    private javax.swing.JLabel categoryLbl;
    private javax.swing.JLabel ifnoCatLbl;
    private javax.swing.JTextField infoCatTf;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JLabel numberLbl;
    private javax.swing.JButton okBtn;
    private javax.swing.JLabel pictureLbl;
    private javax.swing.JButton previousBtn;
    private javax.swing.JLabel priceCatLbl;
    private javax.swing.JTextField priceCatTf;
    private javax.swing.JLabel roomCatLbl;
    private javax.swing.JTextField roomCatTf;
    private javax.swing.JComboBox<String> roomCb;
    private javax.swing.JLabel roomIdLbl;
    private javax.swing.JTextField roomIdTf;
    private javax.swing.JLabel roomLbl;
    private javax.swing.JLabel roomNoteLbl;
    private javax.swing.JTextField roomNoteTf;
    private javax.swing.JButton showBtn;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables
    
    private ArrayList<String> getListOfNames(ArrayList<? extends IName> list) {
        ArrayList<String> listOfNames = new ArrayList<>();
        
        for (IName  iname : list) {
            listOfNames.add(iname.getName());
        }
        return listOfNames;
    }
    
    private void refreshCategories(){
        listCategories = hotel.getListCategories();
        listCategoriesNames = getListOfNames(listCategories);
        categoryCb.setModel(new DefaultComboBoxModel<String>(listCategoriesNames.toArray(new String[0])));
        
        refrehRooms();
    }
    
    private void refrehRooms(){
        String atribute = "";

        if (categoryCb.getSelectedItem() != null) {
            atribute = String.valueOf(categoryCb.getSelectedItem());
        }

        if (InputProcessor.emptyString(atribute)) {
            JOptionPane.showMessageDialog(rootPane,
                    "Výber nemôže byť prázdny!",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int index = listCategoriesNames.indexOf(atribute);

        if (!InputProcessor.isPositiveInt(index)) {
//            JOptionPane.showMessageDialog(rootPane,
//                    "Zlý výber!",
//                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Category category = listCategories.get(index);
        
        listRooms = category.getListRooms();
        listRoomNames = getListOfNames(listRooms);
        roomCb.setModel(new DefaultComboBoxModel<String>(listRoomNames.toArray(new String[0])));
    }

    private void showAction() {
        String atribute = "";

        if (roomCb.getSelectedItem() != null) {
            atribute = String.valueOf(roomCb.getSelectedItem());
        }

        if (InputProcessor.emptyString(atribute)) {
            JOptionPane.showMessageDialog(rootPane,
                    "Výber nemôže byť prázdny!",
                    "Chyba!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int index = listRoomNames.indexOf(atribute);
        
        Room room = listRooms.get(index);
        listImages.clear();
        listImages.addAll(room.getListImages());
        
        setImage(0);
        
        roomCatTf.setText(room.getCategory().getName());
        infoCatTf.setText(room.getCategory().getInfo());
        priceCatTf.setText(String.valueOf(room.getCategory().getPrice()));
        roomIdTf.setText(room.getName());
        roomNoteTf.setText(room.getNote());
        
        populateAccommTbl(room);
        
        
    }
    
    private void setImage(int index){
        if (listImages.size() > 0) {
            pictureLbl.setIcon(listImages.get(index));
            currentImageId = index;
            numberLbl.setText((index + 1) + "/" + listImages.size());
        }

    }
    
    public void deleteRows(DefaultTableModel model) {
        if (model.getRowCount() > 0) {
            for (int i = model.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
    }

    private void populateAccommTbl(Room room) {
        DefaultTableModel model = (DefaultTableModel) accommTbl.getModel();
        deleteRows(model);

        int numberOfColumns = accommTbl.getColumnCount();
        Object[] rowData = new Object[numberOfColumns];
        ArrayList<Accommodation> list = room.getListAccommodations();
        for (int i = 0; i < list.size(); i++) {

            rowData[0] = list.get(i).getCustomer().getName();
            rowData[1] = sdfRoom.format(list.get(i).getStartDate());
            rowData[2] = sdfRoom.format(list.get(i).getEndDate());
            rowData[3] = list.get(i).getServicesString();
            if (list.get(i).getPayment() != null) {
                rowData[4] = list.get(i).getPayment().getTotal().toString();
            } else {
                rowData[4] = "Nezaplatené";
            }
            model.addRow(rowData);
        }
    }
    
}
